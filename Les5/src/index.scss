:root {
  --back-color: #2b1887;
  --list-color: #d5ccff;
  --item-color: #f4f2ff;
}
* {
  margin: 0;
  height: 0;
  box-sizing: border-box;
}
@mixin posElem() {
  display: flex;
  justify-content: center;
  align-items: center;
}
body {
  background: var(--back-color);
  display: grid;
  grid-template-columns: 100vw;
  grid-template-rows: 30vh 70vh;
  grid-template-areas: "header" "main";
}
header {
  grid-area: header;
  height: 100%;
  @include posElem();
  flex-direction: column;
  .h1 {
    height: 30%;
    display: flex;
    align-content: center;
    align-items: center;
    justify-content: center;
    justify-items: center;
    width: 100%;
    h1 {
      color: var(--item-color);
      height: 30px;
      line-height: 100%;
    }
  }
}
main {
  grid-area: main;
  height: 100%;
  @include posElem();
  justify-content: space-around;
  gap: 20px;
  section {
    width: 40%;
    position: relative;
    // overflow: hidden;
    border-radius: 50px;
    max-height: 500px;

    ul {
      border-radius: 50px;
      overflow-y: auto;
      scroll-snap-type: y mandatory;
      height: 90%;
      width: 100%;
      list-style-type: none;
      padding: 10px;
      display: flex;
      gap: 30px;
      flex-direction: column;

      li {
        display: flex;
        justify-content: space-around;
        align-items: center;
        background-color: var(--item-color);
        min-height: 200px;
        width: 100%;
        scroll-snap-align: center;
        scroll-snap-stop: always;
        p {
          height: 20px;
        }
        input {
          height: 20px;
        }
        button {
          height: 40px;
          width: 100px;
        }
      }
    }
    ul::-webkit-scrollbar {
      width: 10px;
    }
    ul::-webkit-scrollbar-track {
      background-color: var(--item-color);
    }
    ul::-webkit-scrollbar-thumb {
      background-color: var(--back-color);
    }
  }
}
.cross {
  width: 40px;
  height: 40px;
  border-radius: 10px;
  outline: none;
  border: none;
  position: relative;
  accent-color: var(--back-color);
}

.cross:checked::before {
  opacity: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  content: url("./../img/icons8-отмеченный-чекбокс-50.png");
  object-fit: cover;

  position: absolute;
  top: 0;
  left: 0;
  width: 40px;
  height: 40px;
  // background-color: red;
}
.task {
  position: relative;
  overflow: hidden;
}
.task::before {
  transition: left 0.5s ease-in-out;
  content: "";
  position: absolute;
  top: 50%;
  left: -100%;
  height: 0.1px;
  border: 1px solid black;
  width: 100%;
}
.cross:checked ~ .task::before {
  left: 0%;
}

button {
  padding: 5px;
  position: relative;
  overflow: hidden;
  outline: none;
  border: none;
  cursor: pointer;
  &::before {
    z-index: 1;
    content: "";
    width: 100%;
    height: 100%;
    background: rgba(0, 8, 255, 0.402);
    position: absolute;
    top: 0;
    left: 100%;
    transition: 0.1s left ease-in-out;
  }
  &:hover::before {
    left: 0%;
  }
}

.addedTasks {
  position: absolute;
  background-color: var(--list-color);
  top: 5%;
  right: 5%;
  color: var(--back-color);
  width: 100px;
  height: 50px;
  border-radius: 10px;
  text-align: center;
  line-height: 50px;
  font-weight: 700;
}
#loading {
  @include posElem();
  position: absolute;
  top: 0;
  left: 0;
  background-color: var(--back-color);
  width: 100vw;
  height: 100vh;
  color: var(--item-color);
  font-weight: 700;
}
.emptyList {
  display: none;
}
.emptyList {
  position: absolute;
  top: 40vh;
  left: 25%;
  transform: translateX(-50%);
}
#tasks:has(li) ~ .emptyList {
  display: none !important;
}
#tasks:not(li) ~ .emptyList {
  display: block;
}

.inputForTask {
  @include posElem();
  width: 70%;
  gap: 20px;

  height: 70%;
}
input[id="task_text"] {
  width: 100%;
  height: 40px;
  border-radius: 10px;
  outline: none;
  border: none;
  text-indent: 20px;
}
#add {
  height: 40px;
  padding: 10px;
  width: 150px;

  border-radius: 10px !important;
}
#add::after {
  position: absolute;
  content: "Add task";
  line-height: 40px;
  z-index: 2;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
#add:hover {
  z-index: 2;
  color: white;
}
.descList {
  @include posElem();
}
#right,
#left {
  min-height: 500px;
  background-color: var(--list-color);
}
@media (max-width: 900px) {
  main {
    flex-direction: column;
    section {
      width: 80%;
    }
  }
}
.choice_section {
  width: 30px;
  @include posElem();
  input[type="checkbox"] {
    display: none;
  }
  label[id="l2"] {
    display: block;
  }
  label[id="l1"] {
    display: none;
  }
  input[type="checkbox"]:checked ~ label[id="l2"] {
    display: none !important;
  }
  input[type="checkbox"]:checked ~ label[id="l1"] {
    display: block;
  }
  label {
    height: 20px;
    width: 20px;
    svg {
      width: 100%;
      height: 100%;
      transform: scale(1.2);
      &:hover {
        fill: rgb(64, 0, 255);
      }
    }
  }
}

.errorTask {
  min-width: 300px;
  position: relative;
  color: var(--item-color);
  height: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--item-color);
  padding: 20px;
  p {
    height: 10px;
    display: block;
    z-index: 10;
  }
  margin-bottom: 10px;
}
.errorTask::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(0.25turn, var(--back-color), var(--list-color));
  background-color: var(--item-color);
  animation: anim 2s ease-in-out infinite;
  background-repeat: no-repeat;
  background-size: 200%;
}
@keyframes anim {
  0%,
  100% {
    background-position: 100%;
  }
  50% {
    background-position: 0%;
  }
}
@media (max-width: 768px) {
  body {
    display: grid !important;
    grid-template-columns: 95%;
    grid-template-rows: 30vh auto;
    grid-template-areas: "headers" "mains";
    justify-content: center;
    row-gap: 20px;
    header {
      grid-area: headers;
      display: grid;

      grid-template-columns: 100%;
      grid-template-rows: 15% 25% 50% 5%;
      grid-template-areas: "h1" "taskss" "form" "error";
      .h1 {
        grid-area: h1;
        height: 100%;
        width: 100%;
      }
      .addedTasks {
        position: static;
        grid-area: taskss;
        height: 100%;
        width: 100%;
      }
      .inputForTask {
        grid-area: form;
        height: 100%;
        width: 100%;
      }
      .errorTask {
        grid-area: error;
        height: 100%;
        width: 100%;
      }
    }
    main {
      grid-area: mains;
      height: 100%;
      width: 100%;
      display: flex;
      @include posElem();
      section {
        width: 100%;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        .task_li {
          min-height: 90px !important;
          border-radius: 20px;
        }
      }
    }
  }
}
.descList {
  display: flex;
  width: 100%;
  justify-content: center;
  .left_list {
    font-size: 20px;
    color: var(--back-color);
    text-align: center;
    font-weight: 800;
  }
}
@media (pointer: coarse) {
  button {
    -webkit-tap-highlight-color: transparent; /* Убираем синий фон */
    outline: none !important;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3); /* Добавляем тень */
  }
  button {
    padding: 5px;
    position: relative;
    overflow: hidden;
    outline: none;
    border: none;
    cursor: pointer;
    &::before {
      z-index: 1;
      content: "";
      width: 100%;
      height: 100%;
      background: rgba(0, 8, 255, 0.402);
      position: absolute;
      top: 0;
      left: 100%;
      transition: 0.1s left ease-in-out;
    }
    &:active::before {
      left: 0%;
    }
  }
}
#tasks {
  li {
    background-color: rgb(251, 255, 143);
  }
}
#mainTasks {
  li {
    background-color: rgb(151, 255, 151);
  }
}
